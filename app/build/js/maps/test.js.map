{"version":3,"sources":["test.coffee"],"names":[],"mappings":"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","file":"test.js","sourceRoot":"/source/","sourcesContent":["app = angular.module \"testApp\", []\n\n###\n# fix https://github.com/angular/angular.js/issues/9269\n###\napp.directive \"rangeParser\", () ->\n  return {\n    restrict: \"A\"\n    require: \"ngModel\"\n    link: (scope, element, attr, ctrl) ->\n      return unless ctrl?\n      ctrl.$parsers.push( (value) ->\n        val = Number(value)\n        val = null if val != val\n        return val\n      )\n  }\n\napp.constant \"defaultSum\", 100\n\n# TODO show float precision (use Math lib or something else)\n# TODO manage old values for save value if letter char input\napp.directive \"commaDetect\", () ->\n  return {\n    restrict: \"A\"\n    require: \"ngModel\"\n    link: (scope, element, attr, ctrl) ->\n      return unless ctrl?\n      oldV = null\n\n      check = (value) ->\n        return unless value?\n        return if parseInt(value) > 100\n        return if value.match(/^\\-/)\n        if value.match(/\\.$/)\n          oldV = parseInt(value)\n        else\n          oldV = null\n\n        tVal = value.replace(/,/g,\".\")\n\n        if tVal != value\n          ctrl.$setViewValue tVal\n          ctrl.$render()\n\n        if oldV?\n          value = oldV\n        else\n          value = tVal\n\n        value\n\n      ctrl.$parsers.push check\n  }\n\napp.service \"Data\", ->\n  @dataNull =\n    items: [\n      name: \"item1\"\n      percent: 0\n    ,\n      name: \"item2\"\n      percent: 0\n    ,\n      name: \"item3\"\n      percent: 0\n    ]\n  @dataNorm =\n    items: [\n      name: \"item1\"\n      percent: 60\n    ,\n      name: \"item2\"\n      percent: 10\n    ,\n      name: \"item3\"\n      percent: 30\n    ]\n  @dataBig =\n    items: [\n      name: \"item1\"\n      percent: 70\n    ,\n      name: \"item2\"\n      percent: 30\n    ,\n      name: \"item3\"\n      percent: 80\n    ]\n  @dataSmall =\n    items: [\n      name: \"item1\"\n      percent: 10\n    ,\n      name: \"item2\"\n      percent: 20\n    ,\n      name: \"item3\"\n      percent: 30\n    ]\n  @\n\n# MainCtrl\n# use common sum\n# use ng-change\napp.controller \"MainCtrl\", ($scope, $window, defaultSum, Data) ->\n  $scope.model = []\n  $scope.diff = null\n  $scope.defSum = defaultSum\n  $window.model = $scope.model\n\n  sumCompute = (items) ->\n    sum = _.reduce(\n      items\n    ,\n      (memo, item)->\n         memo+item.percent\n    ,\n      0\n    )\n    sum\n\n  modItem = (item) ->\n    item[\"blocked\"] = false\n    item[\"getPercent\"] = ->\n      @percent\n    item[\"setPercent\"] = (points, type)->\n      if points == 1 or points == -1 or type == \"append\"\n        @percent += parseFloat(points)\n      else\n        @percent = parseFloat(points)\n      @percent\n    item\n\n  resolveProportion = (percent, sum) ->\n    return Math.round(percent*defaultSum/sum)\n\n  normalizeData = (data, sum) ->\n    _.each(\n      data\n    ,\n      (el) ->\n        el.percent = resolveProportion(el.percent, sum)\n    )\n\n  loadData = (dataType = Data.dataNull) ->\n    $scope.model.push(modItem i) for i in dataType.items\n\n  analiseData = ->\n    sum = sumCompute($scope.model)\n    switch\n      when sum == 0   then $scope.model[0].percent = 100\n      when 0 < sum < 100 or sum > 100 then normalizeData($scope.model, sum)\n\n  findAcceptor = (type) ->\n    if type == \"min\"\n      acceptor = _.min(\n        $scope.model\n      ,\n        (item) ->\n          item.percent\n      )\n    else if type == \"max\"\n      acceptor = _.max(\n        $scope.model\n      ,\n        (item) ->\n          item.percent\n      )\n    acceptor\n\n  loadData Data.dataNorm\n  do analiseData\n\n  $scope.dirtySum = sumCompute($scope.model)\n\n  $scope.set = (item, percent) ->\n    before = item.percent\n    console.log \"before \", before\n    item.setPercent(percent)\n    after = item.percent\n    console.log \"after \", after\n    console.log \"compare \", after == before\n    if after > before\n      $scope.balance percent, \"max\"\n    else if after < before\n      $scope.balance percent, \"min\"\n    return\n\n  $scope.balance = (percent, type) ->\n    acceptor = findAcceptor type\n    console.log \"acceptor\", acceptor\n    $scope.dirtySum = sumCompute($scope.model) #TODO Play with this value\n    $scope.diff = $scope.defSum - sumCompute($scope.model)# - percent\n    acceptor.setPercent($scope.diff, \"append\")\n    $scope.dirtySum = sumCompute($scope.model)\n    return\n\n  $scope.dec = (item) ->\n    unless item == findAcceptor \"min\"\n      $scope.set(item, -1)\n\n  $scope.inc = (item) ->\n    unless $scope.dirtySum == 100 # TODO change this range\n      $scope.set(item, 1)\n\n  return\n"]}